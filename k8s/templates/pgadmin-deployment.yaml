# templates/pgadmin-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-pgadmin
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: {{ .Release.Name }}-pgadmin
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-pgadmin
    spec:
      securityContext:
        fsGroup: 5050        # pgAdmin runs as user 5050
        runAsUser: 5050
        runAsGroup: 5050
      containers:
        - name: pgadmin
          image: "{{ .Values.pgadmin.image.repository }}:{{ .Values.pgadmin.image.tag }}"
          ports:
            - containerPort: 80
          env:
            - name: PGADMIN_DEFAULT_EMAIL
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-secrets
                  key: PGADMIN_DEFAULT_EMAIL
            - name: PGADMIN_DEFAULT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-secrets
                  key: PGADMIN_DEFAULT_PASSWORD
            - name: PGADMIN_CONFIG_SERVER_MODE
              value: "False"
          volumeMounts:
            - name: pgadmin-data
              mountPath: /var/lib/pgadmin
      volumes:
        - name: pgadmin-data
          {{- if .Values.pgadmin.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-pgadmin
          {{- else }}
          emptyDir: {}
          {{- end }}