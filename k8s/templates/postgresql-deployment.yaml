apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-postgresql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}-postgresql
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-postgresql
    spec:
      securityContext:
        fsGroup: 1001    # Add this section
        runAsUser: 1001  # Add this section
      containers:
        - name: postgresql
          image: "{{ .Values.postgresql.image.repository }}:{{ .Values.postgresql.image.tag }}"
          ports:
            - containerPort: 5432
          env:
            {{- include "postgresql.env" . | nindent 12 }}
          volumeMounts:
            - name: postgresql-data
              mountPath: /bitnami/postgresql
          readinessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - postgres
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
          livenessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - postgres
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
      volumes:
        - name: postgresql-data
          {{- if .Values.postgresql.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-postgresql
          {{- else }}
          emptyDir: {}
          {{- end }}