services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: pokemon-api
    ports:
      - "8080:8080"
      - "5077:5077"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=pg;Database=pokemondb;Username=postgres;Password=postgres
    depends_on:
      migrations:
        condition: service_completed_successfully

  migrations:
    build:
      context: .
      dockerfile: Dockerfile.migrations
    container_name: pokemon-migrations
    command: bash -c "dotnet tool run dotnet-ef database update"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=pg;Database=pokemondb;Username=postgres;Password=postgres
    depends_on:
      postgresql:
        condition: service_started

  postgresql:
    container_name: postgres
    hostname: pg
    image: 'bitnami/postgresql:latest'
    environment:
      ALLOW_EMPTY_PASSWORD: yes
      POSTGRESQL_USERNAME: postgres
      POSTGRESQL_PASSWORD: postgres
      POSTGRESQL_DATABASE: pokemondb
    volumes:
      - postgres_data:/bitnami/postgresql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  pgadmin:
    image: 'dpage/pgadmin4'
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@poke.com
      PGADMIN_DEFAULT_PASSWORD: 09Prototype_101
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - '5050:80'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      postgresql:
        condition: service_started

volumes:
  postgres_data:
  pgadmin_data:
